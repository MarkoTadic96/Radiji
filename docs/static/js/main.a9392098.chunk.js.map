{"version":3,"sources":["components/radioStations.js","components/siteLogo.svg","components/header.tsx","components/player.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["radios","name","src","logo","Header","props","className","siteLogo","alt","type","placeholder","onChange","e","onSearch","target","value","Player","React","isPlaying","setPlaying","audioRef","current","station","load","play","pause","ref","onClick","min","max","step","defaultValue","volume","App","setStation","radioStations","stationsList","setStationsList","query","filtered","filter","radioStation","toLowerCase","indexOf","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9392098.chunk.js","sourcesContent":["const radios = [\n  {\n    name: \"Otvoreni\",\n    src: \"http://stream.otvoreni.hr/otvoreni\",\n    logo: \"logos/otvoreniRadioLogo.png\",\n  },\n  {\n    name: \"Laganini Radio\",\n    src: \"http://194.145.208.251:8000/stream/1/\",\n    logo: \"logos/laganiniRadioLogo.png\",\n  },\n  {\n    name: \"Enter ZG\",\n    src: \"http://live.enterzagreb.hr:8023/;\",\n    logo: \"logos/enterZGLogo.png\",\n  },\n  {\n    name: \"Gold FM\",\n    src: \"http://live.goldfm.hr:8068/;\",\n    logo: \"logos/GoldenFMLogo.png\",\n  },\n  {\n    name: \"Antena ZG\",\n    src: \"http://live.antenazagreb.hr:8000/;\",\n    logo: \"logos/antenaZGLogo.png\",\n  },\n  {\n    name: \"Radio 101\",\n    src: \"http://live.radio101.hr:9531/stream/1/\",\n    logo: \"logos/radio101Logo.png\",\n  },\n  {\n    name: \"Radio Sljeme\",\n    src: \"https://21223.live.streamtheworld.com/SLJEMEAAC_SC\",\n    logo: \"logos/radioSljemeLogo.png\",\n  },\n  {\n    name: \"Extra FM\",\n    src: \"http://streams.extrafm.hr:8110/;\",\n    logo: \"logos/extraFMLogo.png\",\n  },\n  {\n    name: \"HR1\",\n    src: \"https://22343.live.streamtheworld.com/PROGRAM1_SC\",\n    logo: \"logos/HR1Logo.png\",\n  },\n  {\n    name: \"HR2\",\n    src: \"https://22733.live.streamtheworld.com/PROGRAM2_SC\",\n    logo: \"logos/HR2Logo.png\",\n  },\n];\n\nexport default radios;\n","export default __webpack_public_path__ + \"static/media/siteLogo.242b6165.svg\";","import * as React from \"react\";\nimport \"./header.css\";\nimport siteLogo from \"./siteLogo.svg\";\n\nexport interface IHeaderProps {\n  onSearch: (query: string) => void;\n}\n\nexport default function Header(props: IHeaderProps) {\n  return (\n    <div className=\"header\">\n      <img src={siteLogo} alt=\"\" className=\"siteLogo\"></img>\n      <div className=\"spacer\"></div>\n      <div className=\"searchBar\">\n        {\" \"}\n        <input\n          className=\"searchBar\"\n          type=\"search\"\n          placeholder=\"find your station\"\n          onChange={(e) => {\n            props.onSearch(e.target.value);\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n","import Slider from \"rc-slider/lib/Slider\";\nimport * as React from \"react\";\nimport { RadioStation } from \"../model/RadioStation\";\nimport \"rc-slider/assets/index.css\";\nimport \"./player.css\";\n\nexport interface IPlayerProps {\n  station: RadioStation;\n}\n\nexport default function Player(props: IPlayerProps) {\n  const [isPlaying, setPlaying] = React.useState(true);\n  const audioRef = React.useRef<HTMLAudioElement>(null);\n\n  React.useEffect(() => {\n    if (isPlaying) {\n      if (audioRef.current) {\n        audioRef.current.src = props.station.src;\n      }\n      audioRef.current?.load();\n      audioRef.current?.play();\n    } else {\n      if (audioRef.current) {\n        audioRef.current.src = \"\";\n      }\n      audioRef.current?.load();\n      audioRef.current?.pause();\n    }\n  }, [isPlaying, audioRef, props.station]);\n\n  return (\n    <div>\n      <div className=\"background\"> </div>\n      <div className=\"player\">\n        {props.station != null && (\n          <div className=\"stationDetails\">\n            <audio ref={audioRef} />\n            <img\n              src={props.station.logo}\n              alt=\"\"\n              className=\"currentStationLogo\"\n            ></img>\n            <p className=\"currentStationName\">{props.station.name}</p>\n          </div>\n        )}\n\n        <div\n          className=\"playButton\"\n          onClick={() => {\n            setPlaying(!isPlaying);\n          }}\n        >\n          {isPlaying ? (\n            <img src=\"logos/pause.png\" alt=\"\" className=\"playButton\"></img>\n          ) : (\n            <img src=\"logos/play.png\" alt=\"\" className=\"playButton\"></img>\n          )}\n        </div>\n\n        <div className=\"volumeControl\">\n          <img src=\"logos/volume.png\" alt=\"\" className=\"volumeIcon\"></img>\n\n          <Slider\n            className=\"slider\"\n            min={0}\n            max={1}\n            step={0.01}\n            defaultValue={1}\n            onChange={(value) => {\n              if (audioRef.current) {\n                audioRef.current.volume = value;\n              }\n            }}\n          ></Slider>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport radioStations from \"./components/radioStations\";\nimport \"./App.css\";\n\nimport Header from \"./components/header\";\nimport Player from \"./components/player\";\nimport { RadioStation } from \"./model/RadioStation\";\n\nexport interface IAppProps {}\n\nexport default function App(props: IAppProps) {\n  const [isPlaying, setPlaying] = React.useState(false);\n  const [station, setStation] = React.useState<RadioStation | null>(null);\n  const [stationsList, setStationsList] = React.useState<RadioStation[]>(\n    radioStations\n  );\n  const audioRef = React.useRef<HTMLAudioElement>(null);\n\n  React.useEffect(() => {\n    if (isPlaying) {\n      audioRef.current?.play();\n    } else {\n      audioRef.current?.pause();\n    }\n  }, [station, isPlaying]);\n\n  return (\n    <div>\n      <Header\n        onSearch={(query) => {\n          const filtered = radioStations.filter((radioStation) => {\n            return (\n              radioStation.name.toLowerCase().indexOf(query.toLowerCase()) !==\n              -1\n            );\n          });\n          setStationsList(filtered);\n        }}\n      ></Header>\n      <div className=\"main\">\n        <div className=\"stationList\">\n          {stationsList.map((station) => {\n            return (\n              <div\n                className=\"station\"\n                key={station.name}\n                onClick={() => {\n                  setStation(station);\n                  setPlaying(true);\n                }}\n              >\n                <img src={station.logo} alt=\"\" className=\"stationLogo\"></img>\n                <p className=\"stationName\"> {station.name} </p>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n      {station && <Player station={station}></Player>}\n    </div>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}